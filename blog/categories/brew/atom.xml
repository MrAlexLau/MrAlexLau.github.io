<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: brew | Bits on Bits on Bits]]></title>
  <link href="http://alexlau123.github.io/blog/categories/brew/atom.xml" rel="self"/>
  <link href="http://alexlau123.github.io/"/>
  <updated>2013-10-27T20:18:02-05:00</updated>
  <id>http://alexlau123.github.io/</id>
  <author>
    <name><![CDATA[Alex Lau]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Autostarting Brew Packages]]></title>
    <link href="http://alexlau123.github.io/blog/2013/10/27/autostarting-brew-packages/"/>
    <updated>2013-10-27T19:48:00-05:00</updated>
    <id>http://alexlau123.github.io/blog/2013/10/27/autostarting-brew-packages</id>
    <content type="html"><![CDATA[<p><a href="http://brew.sh">Brew</a> has made my life a lot easier when setting up new mac development environments. To install a new package is as easy as typing <code>brew install mysql</code> on the command line. (Other programs I commonly install with brew are git, mongodb, and postgresql.)</p>

<p>Sometimes you want a program to start a daemon (background) process when you log in. For example, I can start mongodb&rsquo;s daemon with the <code>mongod</code> command, but it&rsquo;d be nicer if it just started automatically. Fortunately brew has a way to do this!</p>

<p>I can type <code>brew info mongo</code>. If mongod isn&rsquo;t set up to run automatically, the last bit of output will look like this:</p>

<pre><code>To have launchd start mongodb at login:
    ln -sfv /usr/local/opt/mongodb/*.plist ~/Library/LaunchAgents
Then to load mongodb now:
    launchctl load ~/Library/LaunchAgents/homebrew.mxcl.mongodb.plist
Or, if you don't want/need launchctl, you can just run:
    mongod
</code></pre>

<p>Note how you not only see how to start brew upon login, but also it shows you the name of mongo&rsquo;s daemon process.</p>
]]></content>
  </entry>
  
</feed>
